function shuffleArray(e) { for (let t = e.length - 1; t > 0; t--) { const a = Math.floor(Math.random() * (t + 1));[e[t], e[a]] = [e[a], e[t]] } } function drawCards() { const e = document.getElementById("top_row"), t = document.getElementById("dealer_row"), a = document.createElement("div"), n = document.createElement("div"), d = document.createElement("div"), l = document.createElement("div"); if (playerStandCondition = !1, playerStandCondition_left = !1, playerStandCondition_right = !1, playerBustCondition = !1, playerBustCondition_left = !1, playerBustCondition_right = !1, playerSplitCondition = !1, dealerStandCondition = !1, dealerBustCondition = !1, totalDealer.classList.add("hidden"), e.style.display = "flex", split_section.style.display = "none", total.style.display = "flex", betValue.style.display = "flex", e.innerHTML = "", t.innerHTML = "", split_left.innerHTML = "", split_right.innerHTML = "", total_split_left.innerHTML = "", total_split_right.innerHTML = "", handCards.length = 0, dealerCards.length = 0, handCardsLeft.length = 0, handCardsRight.length = 0, !betStatus) return alert("Place your bet before dealing cards!"); if (hit_button.disabled = !1, stand_button.disabled = !1, double_down_button.disabled = !1, hit_button_split_left.disabled = !1, hit_button_split_right.disabled = !1, stand_button_split_left.disabled = !1, stand_button_split_right.disabled = !1, split_button.disabled = !0, cardDeck.length <= 4) alert("Out of cards, please reload!"), hit_button.disabled = !0, stand_button.disabled = !0, double_down_button.disabled = !0; else { loseMoney(), a.classList.add("player_card"), n.classList.add("player_card"), a.id = "card_1", n.id = "card_2"; const i = cardDeck.shift(), r = cardDeck.shift(); a.innerHTML = i.rank, a.innerHTML += i.suit, n.innerHTML = r.rank, n.innerHTML += r.suit, d.classList.add("dealer_card"), l.classList.add("dealer_card"), l.classList.add("hidden"), d.id = "dealer_card_1", l.id = "dealer_card_2"; const s = cardDeck.shift(), o = cardDeck.shift(); d.innerHTML = s.rank, d.innerHTML += s.suit, l.innerHTML = o.rank, l.innerHTML += o.suit, handCards.push(i.value), "<sup>A</sup>" === i.rank && "<sup>A</sup>" === r.rank ? handCards.push(r.alt_value) : handCards.push(r.value), dealerCards.push(s.value), "<sup>A</sup>" === s.rank && "<sup>A</sup>" === o.rank ? dealerCards.push(o.alt_value) : dealerCards.push(o.value), i.rank === r.rank && (split_button.disabled = !1), e.appendChild(a), e.appendChild(n), t.appendChild(d), t.appendChild(l), total.innerHTML = handSum(handCards), totalDealer.innerHTML = handSum(dealerCards), checkDealerBlackJack(), checkBlackJack() } } function hitCard() { if (cardDeck.length <= 1) alert("Out of cards, please reload!"); else { const e = document.getElementById("top_row"), t = parseInt(e.lastElementChild.id.slice(-1)), a = document.createElement("div"); double_down_button.disabled = !0, split_button.disabled = !0, a.classList.add("player_card"), a.id = "card_" + (t + 1); const n = cardDeck.shift(); if (a.innerHTML = n.rank, a.innerHTML += n.suit, "<sup>A</sup>" === n.rank && handSum(handCards) + n.value > 21) handCards.push(n.alt_value); else { let e = handCards.indexOf(11); handSum(handCards) + n.value > 21 && e > -1 ? (handCards.splice(e, 1), handCards.push(1), handCards.push(n.value)) : handCards.push(n.value) } e.appendChild(a), total.innerHTML = handSum(handCards), 21 == handSum(handCards) && (hit_button.disabled = !0, standPlayer()), handSum(handCards) > 21 && (playerBustCondition = !0, hit_button.disabled = !0, stand_button.disabled = !0) } } function hitCardDealer() { const e = document.getElementById("dealer_row"), t = parseInt(e.lastElementChild.id.slice(-1)), a = document.createElement("div"); a.classList.add("dealer_card"), a.id = "dealer_card_" + (t + 1); const n = cardDeck.shift(); if (a.innerHTML = n.rank, a.innerHTML += n.suit, "<sup>A</sup>" === n.rank && handSum(dealerCards) + n.value > 21) dealerCards.push(n.alt_value); else { let e = dealerCards.indexOf(11); handSum(dealerCards) + n.value > 21 && e > -1 ? (dealerCards.splice(e, 1), dealerCards.push(1), dealerCards.push(n.value)) : dealerCards.push(n.value) } e.appendChild(a), totalDealer.innerHTML = handSum(dealerCards), totalDealer.innerHTML.slice(-2) > 21 && (dealerBustCondition = !0, winMoney()) } function doubleDown() { const e = document.getElementById("top_row"), t = parseInt(e.lastElementChild.id.slice(-1)), a = document.createElement("div"), n = document.getElementById("betValue"); a.classList.add("player_card"), a.id = "card_" + (t + 1); const d = cardDeck.shift(); if (a.innerHTML = d.rank, a.innerHTML += d.suit, "<sup>A</sup>" === d.rank && handSum(handCards) + d.value > 21) handCards.push(d.alt_value); else { let e = handCards.indexOf(11); handSum(handCards) + d.value > 21 && e > -1 ? (handCards.splice(e, 1), handCards.push(1), handCards.push(d.value)) : handCards.push(d.value) } e.appendChild(a), total.innerHTML = handSum(handCards), n.value = 2 * parseInt(n.value), moneyValue.innerHTML = parseInt(moneyValue.innerHTML) - parseInt(n.value) / 2, handSum(handCards) > 21 ? (playerBustCondition = !0, hit_button.disabled = !0, stand_button.disabled = !0, split_button.disabled = !0, double_down_button.disabled = !0) : standPlayer() } function checkBlackJack() { const e = document.getElementById("betValue"), t = document.getElementById("moneyValue"); 21 == handSum(handCards) && (alert("BLACKJACK!"), hit_button.disabled = !0, stand_button.disabled = !0, double_down_button.disabled = !0, t.innerHTML = parseInt(t.innerHTML) + 2.5 * parseInt(e.value)) } function checkDealerBlackJack() { 21 == handSum(dealerCards) && (alert("DEALER BLACKJACK!"), hit_button.disabled = !0, stand_button.disabled = !0, double_down_button.disabled = !0, split_button.disabled = !0, document.getElementById("dealer_card_2").classList.remove("hidden"), totalDealer.classList.remove("hidden")) } function standPlayer() { playerStandCondition = !0, hit_button.disabled = !0, stand_button.disabled = !0, double_down_button.disabled = !0, split_button.disabled = !0, autoDealer() } function standDealer() { dealerStandCondition = !0 } function winMoney() { playerSplitCondition || (moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + 2 * parseInt(betValue.value)), playerSplitCondition && !playerBustCondition_left && (moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + 2 * parseInt(betValueLeft.value)), playerSplitCondition && !playerBustCondition_right && (moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + 2 * parseInt(betValueRight.value)) } function loseMoney() { playerSplitCondition ? moneyValue.innerHTML = parseInt(moneyValue.innerHTML) - parseInt(betValueLeft.value) : moneyValue.innerHTML = parseInt(moneyValue.innerHTML) - parseInt(betValue.value) } function autoDealer() { for (document.getElementById("dealer_card_2").classList.remove("hidden"), totalDealer.classList.remove("hidden"); parseInt(totalDealer.innerHTML) < 17;)hit_button_dealer.click(); stand_button_dealer.click() } function setBet() { const e = document.getElementById("betValue"), t = document.getElementById("baseBet"); t.value >= 1 ? (e.value = t.value, betStatus = !0) : alert("Bet amount must be 1 or more!") } function handle(e) { 13 === e.keyCode && (e.preventDefault(), setBet()) } function splitCards() { const e = document.getElementById("top_row"), t = e.firstChild, a = e.lastChild, n = document.getElementById("split_row_left"), d = document.getElementById("split_row_right"), l = t.cloneNode(!0), i = a.cloneNode(!0); playerSplitCondition = !0, e.style.display = "none", total.style.display = "none", split_section.style.display = "flex", betValue.style.display = "none", hit_button.disabled = !0, stand_button.disabled = !0, double_down_button.disabled = !0, split_button.disabled = !0, n.appendChild(l), d.appendChild(i), handCardsLeft.push(handCards[0]), 1 == handCards[1] ? handCardsRight.push(11) : handCardsRight.push(handCards[1]), total_split_left.innerHTML = handSum(handCardsLeft), total_split_right.innerHTML = handSum(handCardsRight), betValueLeft.value = betValue.value, betValueRight.value = betValue.value, hitCardLeft(), hitCardRight(), loseMoney() } function hitCardLeft() { if (cardDeck.length <= 1) alert("Out of cards, please reload!"); else { const e = document.getElementById("split_row_left"), t = parseInt(e.lastElementChild.id.slice(-1)), a = document.createElement("div"); a.classList.add("player_card"), a.id = "card_" + (t + 2); const n = cardDeck.shift(); if (a.innerHTML = n.rank, a.innerHTML += n.suit, "<sup>A</sup>" === n.rank && handSum(handCardsLeft) + n.value > 21) handCardsLeft.push(n.alt_value); else { let e = handCardsLeft.indexOf(11); handSum(handCardsLeft) + n.value > 21 && e > -1 ? (handCardsLeft.splice(e, 1), handCardsLeft.push(1), handCardsLeft.push(n.value)) : handCardsLeft.push(n.value) } e.appendChild(a), total_split_left.innerHTML = handSum(handCardsLeft), 21 == handSum(handCardsLeft) && (hit_button_split_left.disabled = !0, standPlayerSplitLeft()), handSum(handCardsLeft) > 21 && (hit_button_split_left.disabled = !0, stand_button_split_left.disabled = !0, playerBustCondition_left = !0), playerBustCondition_right && (playerBustCondition = !0), playerBustCondition_left && playerStandCondition_right && autoDealer() } } function hitCardRight() { if (cardDeck.length <= 1) alert("Out of cards, please reload!"); else { const e = document.getElementById("split_row_right"), t = parseInt(e.lastElementChild.id.slice(-1)), a = document.createElement("div"); a.classList.add("player_card"), a.id = "card_" + (t + 2); const n = cardDeck.shift(); if (a.innerHTML = n.rank, a.innerHTML += n.suit, "<sup>A</sup>" === n.rank && handSum(handCardsRight) + n.value > 21) handCardsRight.push(n.alt_value); else { let e = handCardsRight.indexOf(11); handSum(handCardsRight) + n.value > 21 && e > -1 ? (handCardsRight.splice(e, 1), handCardsRight.push(1), handCardsRight.push(n.value)) : handCardsRight.push(n.value) } e.appendChild(a), total_split_right.innerHTML = handSum(handCardsRight), 21 == handSum(handCardsRight) && (hit_button_split_right.disabled = !0, standPlayerSplitRight()), handSum(handCardsRight) > 21 && (hit_button_split_right.disabled = !0, stand_button_split_right.disabled = !0, playerBustCondition_right = !0), playerBustCondition_left && (playerBustCondition = !0), playerBustCondition_right && playerStandCondition_left && autoDealer() } } function standPlayerSplitLeft() { playerStandCondition_left = !0, hit_button_split_left.disabled = !0, stand_button_split_left.disabled = !0, (playerStandCondition_left && playerStandCondition_right || playerStandCondition_left && playerBustCondition_right) && (document.getElementById("dealer_card_2").classList.remove("hidden"), totalDealer.classList.remove("hidden"), autoDealer()) } function standPlayerSplitRight() { playerStandCondition_right = !0, hit_button_split_right.disabled = !0, stand_button_split_right.disabled = !0, (playerStandCondition_left && playerStandCondition_right || playerBustCondition_left && playerStandCondition_right) && (document.getElementById("dealer_card_2").classList.remove("hidden"), totalDealer.classList.remove("hidden"), autoDealer()) } handSum = function (e) { return e.reduce(function (e, t) { return e + t }, 0) }, document.getElementById("stand_button_dealer").addEventListener("click", () => { if (playerStandCondition && dealerStandCondition && !dealerBustCondition) switch (!0) { case parseInt(total.innerHTML) > parseInt(totalDealer.innerHTML): moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + 2 * parseInt(betValue.value); break; case parseInt(total.innerHTML) == parseInt(totalDealer.innerHTML): moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + parseInt(betValue.value) }if (playerStandCondition_left && dealerStandCondition && !dealerBustCondition) switch (!0) { case parseInt(handSum(handCardsLeft)) > parseInt(totalDealer.innerHTML): moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + 2 * parseInt(betValueLeft.value); break; case parseInt(handSum(handCardsLeft)) == parseInt(totalDealer.innerHTML): moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + parseInt(betValueLeft.value) }if (playerStandCondition_right && dealerStandCondition && !dealerBustCondition) switch (!0) { case parseInt(handSum(handCardsRight)) > parseInt(totalDealer.innerHTML): moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + 2 * parseInt(betValueRight.value); break; case parseInt(handSum(handCardsRight)) == parseInt(totalDealer.innerHTML): moneyValue.innerHTML = parseInt(moneyValue.innerHTML) + parseInt(betValueRight.value) } });
